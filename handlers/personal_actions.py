from aiogram import types
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
from dispatcher import dp, bot
import config
import re
from bot import BotDB
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
import asyncio


# —Å–æ–∑–¥–∞—ë–º –∫–ª–∞—Å—Å –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
class client:
    def __init__(self, name, ID):
        self.name = name
        self.ID = ID
# sample of client list creation for admin tab:
# clients = [client(name,ID) for name,ID in names,IDs]

# —Å–æ–∑–¥–∞—ë–º —Ñ–æ—Ä–º—É –∏ —É–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—è
class Form(StatesGroup):
    name = State()

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã start
@dp.message_handler(commands = "start")
async def start(message: types.Message):
    if(not BotDB.user_exists(message.from_user.id)):
        BotDB.add_user(message.from_user.id)
        await message.bot.send_message(message.from_user.id, "–ü–æ—Ö–æ–∂–µ, –≤—ã –ø–µ—Ä–≤—ã–π —Ä–∞–∑ –∑–¥–µ—Å—å. –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≤–∞—à–µ–π —Ñ–∏—Ä–º—ã –∏ –Ω–∞–∂–º–∏—Ç–µ Enter")
        await Form.name.set()
    else:
        button_docs = KeyboardButton('/–î–æ–∫—É–º–µ–Ω—Ç—ã')
        button_ball = KeyboardButton('/–ú—è—á')
        button_sent = KeyboardButton('/–û—Ç–ø—Ä–∞–≤–∏–ª(–∞)')
        markup3 = ReplyKeyboardMarkup(resize_keyboard=True).add(button_docs).add(button_ball).add(button_sent)
        await message.bot.send_message(message.from_user.id, "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!", reply_markup=markup3)

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è —Ñ–∏—Ä–º—ã
@dp.message_handler(state=Form.name)
async def process_name(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['name'] = message.text
    await state.finish()
    await message.reply(f"–û–ø–∏—Å–∞–Ω–∏–µ –í–∞—à–µ–π —Ñ–∏—Ä–º—ã —É—Å–ø–µ—à–Ω–æ  –¥–æ–±–∞–≤–ª–µ–Ω–æ, –º—ã –±—É–¥–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –≤–∞—Å –≤ –±–∞–∑–µ –∫–∞–∫ {data['name']}.\n\n"
                        f"–£–≤–∞–∂–∞–µ–º—ã–µ {data['name']}, –ø—Ä–æ—à—É –æ–±—Ä–∞—Ç–∏—Ç—å –í–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–æ–∫\n"
                        f"–ù–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫–∞ –Ω–µ —É–º–µ–µ—Ç üòä")
    BotDB.add_client_info(message.from_user.id, data['name'])

    button_docs = KeyboardButton('/–î–æ–∫—É–º–µ–Ω—Ç—ã')
    button_ball = KeyboardButton('/–ú—è—á')
    button_sent = KeyboardButton('/–û—Ç–ø—Ä–∞–≤–∏–ª(–∞)')
    markup3 = ReplyKeyboardMarkup(resize_keyboard=True).add(button_docs).add(button_ball).add(button_sent)
    #greet_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(button_ball)
    await message.bot.send_message(message.from_user.id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {data['name']}!", reply_markup=markup3)

@dp.message_handler(commands = "–ú—è—á")
async def start(message: types.Message):
    #await message.bot.send_message(message.from_user.id, "–Ø –ø—Ä–æ–≤–µ—Ä—é –≤ –±–∞–∑–µ")
    dbr = BotDB.get_records(message.from_user.id)

    #—Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ ReplyKeyBoardMarkUp, –µ—Å–ª–∏ –º—è—á –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞
    button_docs = KeyboardButton('/–î–æ–∫—É–º–µ–Ω—Ç—ã')
    button_ball = KeyboardButton('/–ú—è—á')
    button_sent = KeyboardButton('/–û—Ç–ø—Ä–∞–≤–∏–ª(–∞)')


    #—Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞—Å–∫–ª–∞–¥–∫–∏ –∫–Ω–æ–ø–æ–∫
    markup3 = ReplyKeyboardMarkup(resize_keyboard=True).add(button_docs).add(button_ball).add(button_sent)

    #print –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    print(dbr)

    #—Ñ–ª–∞–≥ –¥–ª—è –º—è—á–∞
    flag = 0

    for i in dbr:
        if i[1] == 1:
            flag = 1

    if flag != 1:
        await message.bot.send_message(message.from_user.id, "–ú—è—á –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –æ—Ö–æ—Ç–Ω–∏–∫–æ–≤! üëç", reply_markup = markup3)
    else:
        await message.bot.send_message(message.from_user.id, "–ú—è—á –Ω–∞ –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ üëá", reply_markup = markup3 )

@dp.message_handler(commands = "–î–æ–∫—É–º–µ–Ω—Ç—ã")
async def start(message: types.Message):
    await message.bot.send_message(message.from_user.id, "–Ø –ø—Ä–æ–≤–µ—Ä—è—é –≤ –±–∞–∑–µ")
    dbr = BotDB.get_records(message.from_user.id)

    # –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–ª–∞–≥ = 0, –µ—Å–ª–∏ –º—è—á –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏ –∏ =1, –µ—Å–ª–∏ –º—è—á –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞
    flag = 0
    for i in dbr:
        if i[1] == 1:
            flag = 1
            await message.bot.send_message(message.from_user.id, f"–ú—ã –∂–¥—ë–º –æ—Ç –≤–∞—Å {i[0]}")

    button_docs = KeyboardButton('/–î–æ–∫—É–º–µ–Ω—Ç—ã')
    button_ball = KeyboardButton('/–ú—è—á')
    button_sent = KeyboardButton('/–û—Ç–ø—Ä–∞–≤–∏–ª(–∞)')
#    markup2 = ReplyKeyboardMarkup().add(button_docs).add(button_ball)
    markup3 = ReplyKeyboardMarkup(resize_keyboard=True).add(button_docs).add(button_ball).add(button_sent)
    if flag == 0:
        await message.bot.send_message(message.from_user.id, "–í–∞–º –Ω–µ—á–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å, –º—è—á –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –æ—Ö–æ—Ç–Ω–∏–∫–æ–≤ üëå", reply_markup=markup3)
    else:
        await message.bot.send_message(message.from_user.id, "–ú—è—á –Ω–∞ –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ üëá", reply_markup=markup3)

@dp.message_handler(commands = "–û—Ç–ø—Ä–∞–≤–∏–ª(–∞)")
async def start(message: types.Message):
    # –∑–∞–±–∏—Ä–∞–µ–º –∏–Ω—Ñ—É –∏–∑ –±–∞–∑—ã –ø–æ –∫–ª–∏–µ–Ω—Ç—É
    dbr = BotDB.get_records(message.from_user.id)

    button_docs = KeyboardButton('/–î–æ–∫—É–º–µ–Ω—Ç—ã')
    button_ball = KeyboardButton('/–ú—è—á')
    button_sent = KeyboardButton('/–û—Ç–ø—Ä–∞–≤–∏–ª(–∞)')
    markup3 = ReplyKeyboardMarkup(resize_keyboard=True).add(button_docs).add(button_ball).add(button_sent)

    if dbr == []:
        await message.bot.send_message(message.from_user.id,
                                       "–°–ø–∞—Å–∏–±–æ –∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –≤–∞—Å –≤ –±–∞–∑–µ –µ—â—ë –Ω–µ —á–∏—Å–ª–∏—Ç—Å—è, –∏—Ö —Å—Ç–∞—Ç—É—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω, –ø–æ—ç—Ç–æ–º—É –í–∞–º –Ω–µ—á–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å üòä\n\n–ú—ã –¥–æ–±–∞–≤–∏–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Å–æ–æ–±—â–∏–º –í–∞–º ü§ù",
                                       reply_markup=markup3)
    else:
        for i in dbr:
            if i[1] == 1:
                BotDB.update_side(message.from_user.id, i[0], 0)
                await message.bot.send_message(message.from_user.id,
                                               "–°–ø–∞—Å–∏–±–æ –∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –º—ã –ø—Ä–æ–≤–µ—Ä–∏–º. –¢–µ–ø–µ—Ä—å –º—è—á –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –æ—Ö–æ—Ç–Ω–∏–∫–æ–≤ üëç \n\n –ú—ã –æ–±–Ω–æ–≤–∏–º —Å—Ç–∞—Ç—É—Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –µ—Å–ª–∏ –æ—Ç –≤–∞—Å –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —á—Ç–æ-—Ç–æ –µ—â—ë ü§ù",
                                               reply_markup=markup3)
                #–∑–¥–µ—Å—å –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, —á—Ç–æ —Ç–∞–∫–æ–π-—Ç–æ –∫–ª–∏–µ–Ω—Ç –≤—ã—Å–ª–∞–ª –¥–æ–∫—É–º–µ–Ω—Ç—ã
                user_name = BotDB.get_client_info(message.from_user.id)
                await message.bot.send_message(457425801, f"–ö–ª–∏–µ–Ω—Ç {user_name} —Å–æ–æ–±—â–∏–ª(–∞), —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –¥–æ–∫—É–º–µ–Ω—Ç—ã")

            else:
                await message.bot.send_message(message.from_user.id,
                                               "–ú—ã –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É '–û—Ç–ø—Ä–∞–≤–∏–ª(–∞)', –Ω–æ  –º—è—á –Ω–∞ –Ω–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ, –º—ã –Ω–∏—á–µ–≥–æ –æ—Ç –≤–∞—Å –Ω–µ –∂–¥—ë–º üòä",
                                               reply_markup=markup3)
#            break

    # for i in dbr:
    #     if i[1] == 1:
    #         await message.bot.send_message(message.from_user.id, f"–ú—ã –∂–¥—ë–º –æ—Ç –≤–∞—Å {i[0]}")
    #         flag = 1

    # if flag == 0:
    # else:
    #     button_docs = KeyboardButton('/–î–æ–∫—É–º–µ–Ω—Ç—ã')
    #     button_ball = KeyboardButton('/–ú—è—á')
    #     button_sent = KeyboardButton('/–û—Ç–ø—Ä–∞–≤–∏–ª')
    #     markup3 = ReplyKeyboardMarkup().add(button_docs).add(button_ball).add(button_sent)
    #     await message.bot.send_message(message.from_user.id, "–ú—è—á –Ω–∞ –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ üëá", reply_markup=markup3)

@dp.message_handler(lambda message: message.text and 'hello' in message.text.lower())
async def text_handler(msg: types.Message):
    await msg.reply("–î—Ä–∞—Å—å—Ç–µ")

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–º–µ–Ω–µ–º –∞–¥–º–∏–Ω–∞ - –≤—ã–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–∞–Ω–∏–π, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–µ–Ω
@dp.message_handler(commands = "getadmin")
async def start(message: types.Message):
    #–Ω—É–∂–Ω–æ –ø—Ä–∏–∫—Ä—É—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ –∞–¥–º–∏–Ω –±–∞–∑—É
    await message.bot.send_message(message.from_user.id, "–Ø –ø—Ä–æ–≤–µ—Ä—è—é –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤ –≤ –±–∞–∑–µ")
    admins_list = BotDB.getadmin_reply()
    print(admins_list)
    #–ü–æ–ø—ã—Ç–∫–∞ –≤—ã–≥—Ä—É–∑–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ –≤ —á–∞—Ç —á–µ—Ä–µ–∑ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤
    markup_admins = ReplyKeyboardMarkup(resize_keyboard=True)
    for i in admins_list:
       button = KeyboardButton(f'admin {i[1]}')
       markup_admins = markup_admins.add(button)

    await message.bot.send_message(message.from_user.id, "–¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤", reply_markup=markup_admins)

#–ó–¥–µ—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å –∞–¥–º–∏–Ω–∞ (–∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ getadmin) –∏ –≤—ã–¥–∞—ë–º —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
@dp.message_handler(lambda message: 'admin ' in message.text.lower() and message.text)
async def start(message: types.Message):
    print(message.text)
    current_admin = message.text.split(' ')[1]
    id = BotDB.get_admin_id(current_admin)
    print(id)

    users_list = BotDB.get_group_by_responsible(current_admin)
    print(users_list)

    #–í—ã–≥—Ä—É–∂–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∫–æ–º–ø–∞–Ω–∏–π –ø–æ –¥–∞–Ω–Ω–æ–º—É –±—É—Ö—à–∞–ª—Ç–µ—Ä—É –≤ —á–∞—Ç —á–µ—Ä–µ–∑ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π
    markup_users = ReplyKeyboardMarkup(resize_keyboard=True)
    for i in users_list:
       button = KeyboardButton(f'–∫–æ–º–ø–∞–Ω–∏—è {i[1]}')
       markup_users = markup_users.add(button)

    await message.bot.send_message(message.from_user.id, f"–¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞ {current_admin}", reply_markup=markup_users)


@dp.message_handler()
async def send_message(msg: types.Message):
    await msg.reply("–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º —Ç–æ–ª—å–∫–æ –ø–æ –∫–Ω–æ–ø–∫–∞–º, –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫–∞ –Ω–µ —É–º–µ–µ—Ç üòä")


# @dp.message_handler(commands = ("sent", "s"), commands_prefix = "/!")
# async def start(message: types.Message):
#     cmd_variants = (('/sent', '/s', '!sent', '!s'))
#     side = False if message.text.startswith(cmd_variants[0]) else True
#
#     note_from_client = str(message.text)
#     data=str(message.text).split(' ')
#     if len(data) < 4:
#         await message.bot.send_message(message.from_user.id, "–ú–∞–ª–æ –¥–∞–Ω–Ω—ã—Ö")
#     else:
#         BotDB.update_record(message.from_user.id, data[1], data[2], data[3])
#         await message.bot.send_message(message.from_user.id, "–î–∞–Ω–Ω—ã–µ –ø—Ä–∏–Ω—è—Ç—ã")
#  BotDB.add_record(message.from_user.id, side, note_from_client)



# @dp.message_handler(commands = ("history", "h"), commands_prefix = "/!")
# async def start(message: types.Message):
#     cmd_variants = ('/history', '/h', '!history', '!h')
#     dbr = BotDB.get_records(message.from_user.id)
#     print(dbr)
#     for i in dbr:
#         if i[1] == 1:
#             await message.bot.send_message(message.from_user.id, i[0])
